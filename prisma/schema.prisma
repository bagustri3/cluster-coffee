// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  SubCategory SubCategory[]
}

model SubCategory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  categoryId String    @map("questionId") @db.ObjectId
  Category   Category  @relation(fields: [categoryId], references: [id])
  Product    Product[]
}

model Client {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  imageUrl   String?
  profession String?
  link       String?
  Testimoni  Testimoni[]
}

model Testimoni {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  food        Int     @default(0)
  drink       Int     @default(0)
  environment Int     @default(0)
  isFeatured  Boolean @default(false)

  Text     String
  clientId String @map("clientId") @db.ObjectId
  Client   Client @relation(fields: [clientId], references: [id])
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String
  imageUrl    String
  isFeatured  Boolean @default(false)
  ingredients String?
  description String
  price       Int     @default(0)

  categoryId     String          @map("categoryId") @db.ObjectId
  Category       SubCategory     @relation(fields: [categoryId], references: [id])
  ProductOptions ProductOption[]
}

model Option {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  ProductOption    ProductOption[]
  AdditionalOption AdditionalOption[]
}

model AdditionalOption {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Int

  optionId String @map("optionId") @db.ObjectId
  Option   Option @relation(fields: [optionId], references: [id])
}

model ProductOption {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @map("productId") @db.ObjectId
  optionId  String @map("optionId") @db.ObjectId

  Products Product @relation(fields: [productId], references: [id])
  Options  Option  @relation(fields: [optionId], references: [id])
}

model Question {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String
  email       String
  question    String? @db.String
}

model Collaborator {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  imageUrl    String
  description String
  field       String
  link        String
}

model Setting {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  instagramUrl      String?
  facebookUrl       String?
  whatsappUrl       String?
  twitterUrl        String?
  youtubeUrl        String?
  email             String?
  phoneNumber       String?
  footerText        String?
  imgur_accessToken String?
  imgurClientId     String?
  imgurClientSecret String?
  imgurRefreshToken String?
}

model Article {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String
  imageUrl    String
  description String
  content     String
}
